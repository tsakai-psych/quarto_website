{
  "hash": "f3f8c8d083d234e00ec9c91c6c5a3b39",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"ggplot2で片側だけ（上にあるやつは上、下にあるやつは下）にエラーバーをつける\"\ndate: 2025-10-26\nabstract: |\n  ggplot2でもExcelみたいに片側だけ（上にあるやつは上、下にあるやつは下）にエラーバーをつけてみた。\ncategories: [R memo, visualization]\nimage: false\nformat:\n  html:\n    fig-dpi: 200\nknitr:\n  opts_chunk: \n    fig.align: center\n  opts_knit: \n    R.options:\n      width: 140\neditor_options: \n  chunk_output_type: console\n---\n\n# Packages\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\nlibrary(tidyverse)\n```\n:::\n\n\n# Content\n補助で入っている授業で、学生には2要因2水準の実験データのグラフをExcelで作ってもらっています。Excelは重なりよけの位置ずらしができないので、誤差範囲については片側にして作ってもらっています。それをggplotでもやりたいという話です。\n\n## Problem\nまず、データをテキトーに用意します。実験データを読み込んで集計した後だと思ってください。\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\ntest_df <-\n  tibble(\n    group_line = rep(letters[1:2], each = 2),\n    group_axis = rep(letters[3:4], times = 2),\n    y = c(3, 3, 4, 5),\n    sd = rep(1.5, 4),\n    ymin = y - sd,\n    ymax = y + sd\n  )\n\ntest_df\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 4 × 6\n  group_line group_axis     y    sd  ymin  ymax\n  <chr>      <chr>      <dbl> <dbl> <dbl> <dbl>\n1 a          c              3   1.5   1.5   4.5\n2 a          d              3   1.5   1.5   4.5\n3 b          c              4   1.5   2.5   5.5\n4 b          d              5   1.5   3.5   6.5\n```\n\n\n:::\n:::\n\n`ymin`は誤差範囲の下側、`ymax`は誤差範囲の上側の数値です。実際のデータでは`dplyr::reframe()`や`dplyr::summarise()`の中で、`ggplot2::mean_sdl(..., mult = 1)`とすれば、平均値と平均値±1SDの値が一発で得られます。\n\n::: {.callout-tip collapse=\"true\"}\n### `ggplot2::mean_sdl()`の例\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\niris |>\n  reframe(\n    check_mean = mean(Sepal.Length),\n    check_sd = sd(Sepal.Length),\n    ggplot2::mean_sdl(Sepal.Length, mult = 1),\n    .by = Species\n  )\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n     Species check_mean  check_sd     y     ymin     ymax\n1     setosa      5.006 0.3524897 5.006 4.653510 5.358490\n2 versicolor      5.936 0.5161711 5.936 5.419829 6.452171\n3  virginica      6.588 0.6358796 6.588 5.952120 7.223880\n```\n\n\n:::\n:::\n\n`mean_sdl()`のHelpを見るとわかりますが、もともとは`Hmisc::smean.sdl()`なのでその引数（`mult`、`na.rm`）が使えます。引数`mult`は標準偏差を何倍して平均値に加えるかなので1でいいです。\n:::\n\n普通にggplotで作るならこんな感じでしょうか。\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\ntest_df |>\n  ggplot(aes(x = group_axis, y = y, group = group_line)) +\n  theme_classic() +\n  geom_errorbar(\n    aes(ymin = ymin, ymax = ymax),\n    width = .2,\n    alpha = .5,\n    position = position_dodge(.2)\n  ) +\n  geom_line(position = position_dodge(.2)) +\n  geom_point(\n    aes(shape = group_line),\n    position = position_dodge(.2),\n    size = 3,\n    fill = \"white\"\n  ) +\n  scale_shape_manual(\n    values = c(19, 21)\n  )\n```\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-4-1.png){fig-align='center' width=1400}\n:::\n:::\n\n普段の自分で使う用のグラフならこれでいいです。ただ、誤差範囲が両側なのと、Excelでは（簡単に）できない位置ずらしがあるので、答え合わせ用としてはよくないですね。というわけで、位置ずらしせず誤差範囲を片側にしたグラフをggplotでも作りたいわけです。\n\n## Solution\nまず、`ggplot2::geom_errorbar()`は要素として`ymin`と`ymax`が必須です。なので、例えば上下のどちらかを消そうとして`aes()`の中で省いてしまうとエラーになります。\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\ntest_df |>\n  ggplot(aes(x = group_axis, y = y, group = group_line)) +\n  geom_errorbar(\n    aes(ymax = ymax)\n  )\n```\n\n::: {.cell-output .cell-output-error}\n\n```\nError in `geom_errorbar()`:\n! Problem while setting up geom.\nℹ Error occurred in the 1st layer.\nCaused by error in `compute_geom_1()`:\n! `geom_errorbar()` requires the following missing aesthetics: ymin or\n  xmin and xmax.\n```\n\n\n:::\n:::\n\nということで、`ymin`と`ymax`に適切な値を設定する必要があります。\n\nまず、横軸の水準ごとに値が小さい方がTRUEを返す列を作り、値が小さい方はymaxがNAに、値が大きい方はyminがNAになるようにします。\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\ntest_df |>\n  mutate(\n    is_smaller = rank(y, ties.method = \"first\") == 1,\n    .by = group_axis # <1>\n  ) |>\n  mutate(\n    ymin = if_else(is_smaller, ymin, NA),\n    ymax = if_else(!is_smaller, ymax, NA)\n  )\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 4 × 7\n  group_line group_axis     y    sd  ymin  ymax is_smaller\n  <chr>      <chr>      <dbl> <dbl> <dbl> <dbl> <lgl>     \n1 a          c              3   1.5   1.5  NA   TRUE      \n2 a          d              3   1.5   1.5  NA   TRUE      \n3 b          c              4   1.5  NA     5.5 FALSE     \n4 b          d              5   1.5  NA     6.5 FALSE     \n```\n\n\n:::\n:::\n\n1. 横軸の水準ごとになので、ここの`.by`は必須。それか`group_by() |> mutate() |> ungroup()`。\n\nこの状態で`geom_errorbar()`を使うとこうなります。\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\ntest_df |>\n  mutate(\n    is_smaller = rank(y, ties.method = \"first\") == 1,\n    .by = group_axis\n  ) |>\n  mutate(\n    ymin = if_else(is_smaller, ymin, NA),\n    ymax = if_else(!is_smaller, ymax, NA)\n  ) |>\n  ggplot(aes(x = group_axis, y = y, group = group_line)) +\n  theme_classic() +\n  geom_errorbar(\n    aes(ymin = ymin, ymax = ymax),\n    width = .2,\n    alpha = .5\n  )\n```\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-7-1.png){fig-align='center' width=1400}\n:::\n:::\n\n片側だけにひげができていますが、線分が消えてしまっています。ではNAの代わりにyの値を入れるとどうなるでしょうか。\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\ntest_df |>\n  mutate(\n    is_smaller = rank(y, ties.method = \"first\") == 1,\n    .by = group_axis\n  ) |>\n  mutate(\n    ymin = if_else(is_smaller, ymin, y),\n    ymax = if_else(!is_smaller, ymax, y)\n  ) |>\n  ggplot(aes(x = group_axis, y = y, group = group_line)) +\n  theme_classic() +\n  geom_errorbar(\n    aes(ymin = ymin, ymax = ymax),\n    width = .2,\n    alpha = .5\n  )\n```\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-8-1.png){fig-align='center' width=1400}\n:::\n:::\n\n線分の表示が戻りました。一見よさそうに見えるのですが、これをマーカーと合わせるとこうなります。\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\ntest_df |>\n  mutate(\n    is_smaller = rank(y, ties.method = \"first\") == 1,\n    .by = group_axis\n  ) |>\n  mutate(\n    ymin = if_else(is_smaller, ymin, y),\n    ymax = if_else(!is_smaller, ymax, y)\n  ) |>\n  ggplot(aes(x = group_axis, y = y, group = group_line)) +\n  theme_classic() +\n  geom_errorbar(\n    aes(ymin = ymin, ymax = ymax),\n    width = .2,\n    alpha = .5\n  ) +\n  geom_line() +\n  geom_point(\n    size = 3,\n    fill = \"white\"\n  )\n```\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-9-1.png){fig-align='center' width=1400}\n:::\n:::\n\nマーカーにひげが重なってしまい見栄えが悪いです。ということで、`geom::errorbar()`にはyを渡すよりはNAを渡す方が作りたいグラフに近いことになります。では、同じことを`geom_linerange()`でやるとどうなるでしょう。\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\ntest_df |>\n  mutate(\n    is_smaller = rank(y, ties.method = \"first\") == 1,\n    .by = group_axis\n  ) |>\n  mutate(\n    ymin = if_else(is_smaller, ymin, y),\n    ymax = if_else(!is_smaller, ymax, y)\n  ) |>\n  ggplot(aes(x = group_axis, y = y, group = group_line)) +\n  theme_classic() +\n  geom_linerange(\n    aes(ymin = ymin, ymax = ymax),\n    alpha = .5\n  ) +\n  geom_line() +\n  geom_point(\n    size = 3,\n    fill = \"white\"\n  )\n```\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-10-1.png){fig-align='center' width=1400}\n:::\n:::\n\nこちらは線分が表示されていますね。\n\nということは、`geom_errorbar()`にNAを入れて片方のひげだけ作り、`geom_linerange()`にyを入れて線分を描いてもらえば解決しそうな気がします。というわけで、`geom_errorbar()`用の参照列と`geom_linerange()`用の参照列を作ってグラフを描いてもらいます。\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\ntest_df |>\n  mutate(\n    is_smaller = rank(y, ties.method = \"first\") == 1,\n    .by = group_axis\n  ) |>\n  mutate(\n    ymin_lr = if_else(is_smaller, ymin, y),\n    ymin_eb = if_else(is_smaller, ymin, NA),\n    ymax_lr = if_else(!is_smaller, ymax, y),\n    ymax_eb = if_else(!is_smaller, ymax, NA)\n  ) |>\n  ggplot(aes(x = group_axis, y = y, group = group_line)) +\n  theme_classic() +\n  geom_linerange(\n    aes(ymin = ymin_lr, ymax = ymax_lr),\n  ) +\n  geom_errorbar(\n    aes(ymin = ymin_eb, ymax = ymax_eb),\n    width = .2,\n    alpha = .5\n  ) +\n  geom_line() +\n  geom_point(size = 3)\n```\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-11-1.png){fig-align='center' width=1400}\n:::\n:::\n\n求めていたものができました。後はいろいろ調整すれば完成です。\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code  code-fold=\"true\"}\ntest_df |>\n  mutate(\n    is_smaller = rank(y, ties.method = \"first\") == 1,\n    .by = group_axis\n  ) |>\n  mutate(\n    ymin_lr = if_else(is_smaller, ymin, y),\n    ymin_eb = if_else(is_smaller, ymin, NA),\n    ymax_lr = if_else(!is_smaller, ymax, y),\n    ymax_eb = if_else(!is_smaller, ymax, NA)\n  ) |>\n  ggplot(aes(x = group_axis, y = y, group = group_line)) +\n  theme_classic() +\n  geom_linerange(\n    aes(ymin = ymin_lr, ymax = ymax_lr),\n  ) +\n  geom_errorbar(\n    aes(ymin = ymin_eb, ymax = ymax_eb),\n    width = .2,\n    alpha = .5\n  ) +\n  geom_line() +\n  geom_point(\n    aes(shape = group_line),\n    size = 3,\n    fill = \"white\"\n  ) +\n  scale_shape_manual(\n    values = c(19, 21)\n  ) +\n  scale_y_continuous(\n    limits = c(0, 8),\n    expand = expansion()\n  )\n```\n\n::: {.cell-output-display}\n![](index_files/figure-html/preview-1.png){fig-align='center' width=1400}\n:::\n:::\n\n\nこんな風に微妙にクロスしているデータでもうまくいきます。\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\ntest_df_cross <-\n  tibble(\n    group_line = rep(letters[1:2], each = 2),\n    group_axis = rep(letters[3:4], times = 2),\n    y = c(2.1, 2, 2, 4),\n    sd = c(1.7, 1, .5, .2),\n    ymin = y - sd,\n    ymax = y + sd\n  )\n\ntest_df_cross\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 4 × 6\n  group_line group_axis     y    sd  ymin  ymax\n  <chr>      <chr>      <dbl> <dbl> <dbl> <dbl>\n1 a          c            2.1   1.7   0.4   3.8\n2 a          d            2     1     1     3  \n3 b          c            2     0.5   1.5   2.5\n4 b          d            4     0.2   3.8   4.2\n```\n\n\n:::\n:::\n\n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code  code-fold=\"true\"}\ntest_df_cross |>\n  mutate(\n    is_smaller = rank(y, ties.method = \"first\") == 1,\n    .by = group_axis\n  ) |>\n  mutate(\n    ymin_lr = if_else(is_smaller, ymin, y),\n    ymin_eb = if_else(is_smaller, ymin, NA),\n    ymax_lr = if_else(!is_smaller, ymax, y),\n    ymax_eb = if_else(!is_smaller, ymax, NA)\n  ) |>\n  ggplot(aes(x = group_axis, y = y, group = group_line)) +\n  theme_classic() +\n  geom_linerange(\n    aes(ymin = ymin_lr, ymax = ymax_lr),\n    alpha = .5\n  ) +\n  geom_errorbar(\n    aes(ymin = ymin_eb, ymax = ymax_eb),\n    width = .2,\n    alpha = .5\n  ) +\n  geom_line() +\n  geom_point(\n    aes(shape = group_line),\n    size = 3\n  )\n```\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-13-1.png){fig-align='center' width=1400}\n:::\n:::\n\n::: {.callout-tip collapse=\"true\"}\n### Excelで同じことをする場合\nちなみに、Excelで誤差範囲を片側にしているときにデータがクロスしている場合、誤差範囲の値の片方を負の値にする必要があります。\n\n|平均値|水準c|水準d|\n|:-:|-:|-:|\n|条件A|2.1|2|\n|条件B|2|4|\n\n|標準偏差|水準c|水準d|\n|:-:|-:|-:|\n|条件A|1.7|1|\n|条件B|0.5|0.2|\n\nこんな感じでグラフ作成用にデータを配置していた場合、以下のように標準偏差の方のどちらかの水準の列を負の値にすると、誤差範囲の向きが反転します。\n\n|標準偏差|水準c|水準d|\n|:-:|-:|-:|\n|条件A| -1.7|1|\n|条件B|-0.5|0.2|\n:::\n\n横軸の要因が2要因以上あっても大丈夫です。\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\nset.seed(20251026)\n\ntest_df_2x4 <- \n  tibble(\n    group_line = rep(letters[1:2], each = 4),\n    group_axis = rep(LETTERS[1:4], times = 2),\n    y = runif(8, min = 3, max = 5),\n    sd = runif(8, min = .5, max = 2),\n    ymin = y - sd,\n    ymax = y + sd\n  )\n\ntest_df_2x4\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 8 × 6\n  group_line group_axis     y    sd  ymin  ymax\n  <chr>      <chr>      <dbl> <dbl> <dbl> <dbl>\n1 a          A           3.65 1.89   1.76  5.54\n2 a          B           3.88 1.77   2.11  5.65\n3 a          C           4.90 0.816  4.08  5.71\n4 a          D           4.51 1.38   3.13  5.88\n5 b          A           3.98 1.25   2.73  5.22\n6 b          B           4.79 1.03   3.76  5.82\n7 b          C           3.30 1.39   1.91  4.70\n8 b          D           4.50 0.681  3.82  5.18\n```\n\n\n:::\n:::\n\n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code  code-fold=\"true\"}\ntest_df_2x4 |>\n  mutate(\n    is_smaller = rank(y, ties.method = \"first\") == 1,\n    .by = group_axis\n  ) |>\n  mutate(\n    ymin_lr = if_else(is_smaller, ymin, y),\n    ymin_eb = if_else(is_smaller, ymin, NA),\n    ymax_lr = if_else(!is_smaller, ymax, y),\n    ymax_eb = if_else(!is_smaller, ymax, NA)\n  ) |>\n  ggplot(aes(x = group_axis, y = y, group = group_line)) +\n  theme_classic() +\n  geom_linerange(\n    aes(ymin = ymin_lr, ymax = ymax_lr),\n    alpha = .5\n  ) +\n  geom_errorbar(\n    aes(ymin = ymin_eb, ymax = ymax_eb),\n    width = .2,\n    alpha = .5\n  ) +\n  geom_line() +\n  geom_point(\n    aes(shape = group_line),\n    size = 3\n  )\n```\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-15-1.png){fig-align='center' width=1400}\n:::\n:::\n\n\n# Conclusion\nというわけで、ggplot2でも片側だけにエラーバーをつけたグラフができました。伸ばしたくない方向については`geom_errorbar()`にはNAを、`geom_linerange()`にはマーカーの値（今回は平均値）をそのまま入れればいいということでした。\n\n個人的には`dplyr::if_else()`のところをもっとスマートに書けたらうれしいなーと思ったので、まだまだ勉強します。\n\n# Session Infomation\n\n::: {.cell layout-align=\"center\"}\n::: {.cell-output .cell-output-stdout}\n\n```\nR version 4.4.2 (2024-10-31 ucrt)\nPlatform: x86_64-w64-mingw32/x64\nRunning under: Windows 11 x64 (build 26100)\n\nMatrix products: default\n\n\nlocale:\n[1] LC_COLLATE=Japanese_Japan.utf8  LC_CTYPE=Japanese_Japan.utf8   \n[3] LC_MONETARY=Japanese_Japan.utf8 LC_NUMERIC=C                   \n[5] LC_TIME=Japanese_Japan.utf8    \n\ntime zone: Asia/Tokyo\ntzcode source: internal\n\nattached base packages:\n[1] stats     graphics  grDevices utils     datasets  methods   base     \n\nother attached packages:\n [1] lubridate_1.9.4 forcats_1.0.0   stringr_1.5.1   dplyr_1.1.4    \n [5] purrr_1.1.0     readr_2.1.5     tidyr_1.3.1     tibble_3.3.0   \n [9] ggplot2_3.5.2   tidyverse_2.0.0\n\nloaded via a namespace (and not attached):\n [1] utf8_1.2.6         generics_0.1.4     stringi_1.8.7      hms_1.1.3         \n [5] digest_0.6.37      magrittr_2.0.3     evaluate_1.0.5     grid_4.4.2        \n [9] timechange_0.3.0   RColorBrewer_1.1-3 fastmap_1.2.0      jsonlite_2.0.0    \n[13] nnet_7.3-20        backports_1.5.0    Formula_1.2-5      gridExtra_2.3     \n[17] scales_1.4.0       cli_3.6.5          rlang_1.1.6        Hmisc_5.2-3       \n[21] base64enc_0.1-3    withr_3.0.2        yaml_2.3.10        tools_4.4.2       \n[25] tzdb_0.5.0         checkmate_2.3.2    htmlTable_2.4.3    colorspace_2.1-1  \n[29] vctrs_0.6.5        R6_2.6.1           rpart_4.1.24       lifecycle_1.0.4   \n[33] htmlwidgets_1.6.4  foreign_0.8-90     cluster_2.1.8.1    pkgconfig_2.0.3   \n[37] pillar_1.11.0      gtable_0.3.6       data.table_1.17.8  glue_1.8.0        \n[41] xfun_0.52          tidyselect_1.2.1   rstudioapi_0.17.1  knitr_1.50        \n[45] farver_2.1.2       htmltools_0.5.8.1  labeling_0.4.3     rmarkdown_2.29    \n[49] compiler_4.4.2    \n```\n\n\n:::\n:::\n\n\n",
    "supporting": [
      "index_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}